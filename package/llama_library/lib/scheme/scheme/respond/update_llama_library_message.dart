// ignore_for_file: non_constant_identifier_names, unused_import
import "package:general_lib/general_lib.dart";
// import "dart:convert";

/// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
class UpdateLlamaLibraryMessage extends JsonScheme {
  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  UpdateLlamaLibraryMessage(super.rawData);

  /// return default data
  ///
  static Map get defaultData {
    return {
      "@type": "updateLlamaLibraryMessage",
      "is_done": false,
      "text": "",
      "@extra": ""
    };
  }

  /// check data
  /// if raw data
  /// - rawData["@type"] == updateLlamaLibraryMessage
  /// if same return true
  bool json_scheme_utils_checkDataIsSameBySpecialType() {
    return rawData["@type"] == defaultData["@type"];
  }

  /// check value data whatever do yout want
  bool json_scheme_utils_checkDataIsSameBuilder({
    required bool Function(Map rawData, Map defaultData) onResult,
  }) {
    return onResult(rawData["@type"], defaultData["@type"]);
  }

  /// create [UpdateLlamaLibraryMessage]
  /// Empty
  static UpdateLlamaLibraryMessage empty() {
    return UpdateLlamaLibraryMessage({});
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  String? get special_type {
    try {
      if (rawData["@type"] is String == false) {
        return null;
      }
      return rawData["@type"] as String;
    } catch (e) {
      return null;
    }
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  set special_type(String? value) {
    rawData["@type"] = value;
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  bool? get is_done {
    try {
      if (rawData["is_done"] is bool == false) {
        return null;
      }
      return rawData["is_done"] as bool;
    } catch (e) {
      return null;
    }
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  set is_done(bool? value) {
    rawData["is_done"] = value;
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  String? get text {
    try {
      if (rawData["text"] is String == false) {
        return null;
      }
      return rawData["text"] as String;
    } catch (e) {
      return null;
    }
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  set text(String? value) {
    rawData["text"] = value;
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  String? get special_extra {
    try {
      if (rawData["@extra"] is String == false) {
        return null;
      }
      return rawData["@extra"] as String;
    } catch (e) {
      return null;
    }
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  set special_extra(String? value) {
    rawData["@extra"] = value;
  }

  /// Generated By General Library Documentation Undocument By General Corporation & Global Corporation & General Developer
  static UpdateLlamaLibraryMessage create({
    bool schemeUtilsIsSetDefaultData = false,
    String special_type = "updateLlamaLibraryMessage",
    bool? is_done,
    String? text,
    String special_extra = "",
  }) {
    // UpdateLlamaLibraryMessage updateLlamaLibraryMessage = UpdateLlamaLibraryMessage({
    final Map updateLlamaLibraryMessage_data_create_json = {
      "@type": special_type,
      "is_done": is_done,
      "text": text,
      "@extra": special_extra,
    };

    updateLlamaLibraryMessage_data_create_json
        .removeWhere((key, value) => value == null);

    if (schemeUtilsIsSetDefaultData) {
      defaultData.forEach((key, value) {
        if (updateLlamaLibraryMessage_data_create_json.containsKey(key) ==
            false) {
          updateLlamaLibraryMessage_data_create_json[key] = value;
        }
      });
    }
    return UpdateLlamaLibraryMessage(
        updateLlamaLibraryMessage_data_create_json);
  }
}
